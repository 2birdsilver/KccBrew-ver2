<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven validator="validator" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/img/**" location="/resources/img/" />
	<resources mapping="/js/**" location="/resources/js/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>


	<!-- multipartResolver -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="50000000" />
	</beans:bean>
	<!-- multipartResolver -->

	<!-- Tiles -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="0" />
	</beans:bean>

	<!-- BeanNameViewResolver 설정 -->
	<beans:bean
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- 파일 다운로드를 처리할 클래스를 빈(bean)으로 등록 -->
	<beans:bean id="fileDownloadUtil"
		class="kr.co.kccbrew.sysMng.fileMng.util.FileDownloadUtil" />
	
	
	<!-- Controller -->
	<context:component-scan
		base-package="kr.co.kccbrew" />
	<!-- <context:component-scan base-package="kr.co.kccbrew.comm.login.controller" 
		/> -->
	<context:component-scan
		base-package="kr.co.kccbrew.comm.main.controller" />
	<!-- <context:component-scan base-package="kr.co.kccbrew.comm.register.controller" 
		/> -->
	<context:component-scan
		base-package="kr.co.kccbrew.notice.controller" />

	<context:component-scan
		base-package="kr.co.kccbrew.strMng.controller" />
	<context:component-scan
		base-package="kr.co.kccbrew.sysMng.cdMng.controller" />
	<context:component-scan
		base-package="kr.co.kccbrew.sysMng.logMng.controller" />
	<context:component-scan
		base-package="kr.co.kccbrew.asMng.contorller" />

	<context:component-scan
		base-package="kr.co.kccbrew.userMng.contorller" />
	<context:component-scan
		base-package="kr.co.kccbrew.schdlMng.contorller" />
	<context:component-scan
		base-package="kr.co.kccbrew.sysMng.fileMng.contorller" />
	<context:component-scan
		base-package="kr.co.kccbrew.comm.security.controller" />
	<context:component-scan
		base-package="kr.co.kccbrew.comm.util" />
	<context:component-scan
		base-package="kr.co.kccbrew.sysMng.statistics.controller" />
	<context:component-scan
		base-package="kr.co.kccbrew.comm.chat.controller" />
	<context:component-scan
		base-package="kr.co.kccbrew.sysMng.alarm.controller" />
		<context:component-scan
		base-package="kr.co.kccbrew.batch.config" />
		<context:component-scan
		base-package="kr.co.kccbrew.batch" />
	<!-- Controller -->



	<view-controller path="/" view-name="/home" />

	<util:properties id="serverImgPath"
		location="classpath:/config/application.properties" />

	<!-- inteceptor -->

	<interceptors>

		<!-- 로그수집 및 저장 -->
		<interceptor>
			<mapping path="/login" />
			<mapping path="/register" />
			<mapping path="/holiday/add" />
			<mapping path="/holiday/delete" />
			<mapping path="/receipt" />
			<mapping path="/as-assign" />
			<mapping path="/reject" />
			<mapping path="/insertResult" />
			<mapping path="/as-result-mng" />
			<exclude-mapping path="/resources/**/" />
			<beans:bean
				class="kr.co.kccbrew.comm.interceptor.component.LogInterceptor" />
		</interceptor>

		<!-- 사용자 프로필 지속적으로 업데이트 -->
		<interceptor>
			<mapping path="/**" />
			<exclude-mapping path="/resources/**/" />
			<beans:bean
				class="kr.co.kccbrew.comm.interceptor.component.UserProfileInterceptor" />
		</interceptor>

		<!-- 사용자 정보가 담긴 세션 지속적으로 업데이트 -->
		<interceptor>
			<mapping path="/**" />
			<exclude-mapping path="/resources/**/" />
			<beans:bean
				class="kr.co.kccbrew.comm.interceptor.component.SessionInterceptor" />
		</interceptor>

		<!-- 로그아웃 시 웹소켓세션 제거 -->
		<!-- <interceptor>
			<mapping path="/logout" />
			<mapping path="/login-success" />
			<beans:bean
				class="kr.co.kccbrew.comm.interceptor.component.LogoutInterceptor" />
		</interceptor> -->

	</interceptors>

	<!-- 유효성검사 -->
	<beans:bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="messages" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>

	<!-- 웹소켓 -->
	<websocket:handlers>
		<websocket:mapping path="/echoHandler"
			handler="echoHandler" />
		<websocket:sockjs />
	</websocket:handlers>

	<default-servlet-handler />

	<beans:bean id="echoHandler"
		class="kr.co.kccbrew.sysMng.alarm.controller.EchoHandler" />


	<!-- 웹소켓 -->
	<beans:bean id="echoHandle"
		class="kr.co.kccbrew.comm.util.EchoHandle" />

	<websocket:handlers>
		<websocket:mapping handler="echoHandle" path="/echo" />
		<websocket:handshake-interceptors>
			<beans:bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>
	<beans:bean id="amazonS3Client" class="com.amazonaws.services.s3.AmazonS3Client">
	</beans:bean>
</beans:beans>