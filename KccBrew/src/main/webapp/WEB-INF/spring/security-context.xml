<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/cloud/aws/context http://www.springframework.org/schema/cloud/aws/context/spring-cloud-aws-context-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- 회원정보 -->
	<beans:bean id="customUserDetailsService"
		class="kr.co.kccbrew.comm.security.service.CustomUserDetailsService" />

	<!-- 비밀번호 암호화 -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength"
			value="12" />
	</beans:bean>

	<!-- 로그인 성공시 수행 -->
	<beans:bean id="customAuthenticationSuccessHandler"
		class="kr.co.kccbrew.comm.security.controller.CustomAuthenticationSuccessHandler" />

	<!-- 로그인 실패시 수행 -->
	<beans:bean id="customAuthenticationFailureHandler"
		class="kr.co.kccbrew.comm.security.controller.CustomAuthenticationFailureHandler" />

	<!-- 로그아웃 성공시 수행 -->
	<beans:bean id="customLogoutSuccessHandler"
		class="kr.co.kccbrew.comm.security.controller.CustomLogoutSuccessHandler" />


	<http auto-config="true" use-expressions="true">
		<session-management invalid-session-url="/login">
			<concurrency-control max-sessions="1"
				expired-url="/login"></concurrency-control>
		</session-management>

		<intercept-url pattern="/resources/**"
			access="permitAll" />
		<intercept-url pattern="/search-store-list"
			access="permitAll" />
		<intercept-url pattern="/search-location-code"
			access="permitAll" />
		<intercept-url pattern="/check_user_id"
			access="permitAll" />
		<intercept-url pattern="/login-failure"
			access="permitAll" />
		<intercept-url pattern="/chat/**" access="permitAll" />

		<!-- 비로그인회원만 접근가능 -->
		<intercept-url pattern="/login"
			access="hasAnyRole('ROLE_NOTAPPROVED' , 'ROLE_ANONYMOUS')" />
		<intercept-url pattern="/signup"
			access="hasAnyRole('ROLE_NOTAPPROVED' , 'ROLE_ANONYMOUS')" />
		<intercept-url pattern="/register"
			access="hasAnyRole('ROLE_NOTAPPROVED' , 'ROLE_ANONYMOUS')" />
		<intercept-url pattern="/userSearch/**"
			access="hasAnyRole('ROLE_NOTAPPROVED' , 'ROLE_ANONYMOUS')" />
		<intercept-url pattern="/searchPassword/**"
			access="hasAnyRole('ROLE_NOTAPPROVED' , 'ROLE_ANONYMOUS')" />


		<!-- 관리자 접근가능 -->
		<intercept-url pattern="/admin/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<intercept-url pattern="/store/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<intercept-url pattern="/code/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<intercept-url pattern="/log/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<intercept-url pattern="/user/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<intercept-url pattern="/file/**"
			access="hasAuthority('ROLE_ADMIN')" />

		<!-- 점주 접근가능 -->
		<intercept-url pattern="/manager/**"
			access="hasRole('ROLE_MANAGER')" />


		<!-- 수리기사 접근가능 -->
		<intercept-url pattern="/mecha/**"
			access="hasRole('ROLE_MECHA')" />

		<intercept-url pattern="/**" access="isAuthenticated()" />
		<intercept-url pattern="/chat/**"
			access="hasAnyRole('ROLE_MECHA' , 'ROLE_MANAGER')" />

		<!-- 로그인 설정 -->
		<form-login login-page="/login"
			login-processing-url="/login" username-parameter="username"
			password-parameter="password"
			authentication-failure-handler-ref="customAuthenticationFailureHandler"
			authentication-success-handler-ref="customAuthenticationSuccessHandler" />

		<csrf disabled="true" />

		<!-- 로그아웃 설정 -->
		<logout logout-url="/logout"
			success-handler-ref="customLogoutSuccessHandler"
			invalidate-session="true" />
	</http>


	<authentication-manager>

		<authentication-provider
			user-service-ref="customUserDetailsService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>