<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kccbrew.notice.dao.INoticeRepository">
	
	<!-- 공지사항 총 개수 구하기 -->
	<select id="countNotice" resultType="int">
		<![CDATA[
			SELECT COUNT(*) FROM notification
		]]>
	</select>
	
	<!-- 페이징 처리 후 공지사항 조회, 검색 조건을 설정하지 않았을 경우 -->
	<select id="selectNotice" resultType="kr.co.kccbrew.notice.model.NoticeVo">
		<![CDATA[
		SELECT * 
			FROM (
				SELECT ROWNUM RN, A.* 
					FROM (
							SELECT
								notice_seq		AS "noticeSeq"
								,writer_name	AS "writerName"
								,write_dttm		AS "writeDate"
								,notice_title	AS "noticeTitle"
								,views			AS "views"
							FROM notification
							ORDER BY notice_seq DESC
							) A
				)
		WHERE RN BETWEEN #{start} AND #{end}
		]]>
	</select>
	
	<!-- 검색 조건으로 필터링한 공지사항 결과 총 개수 구하기 -->
	<select id="countNoticeWithCon" parameterType="hashmap" resultType="java.lang.Integer">
		SELECT COUNT(*)
			FROM (
				SELECT ROWNUM RN, A.* 
					FROM (
							SELECT
								notice_seq		AS "noticeSeq"
								,writer_name	AS "writerName"
								,write_dttm		AS "writeDate"
								,notice_title	AS "noticeTitle"
								,views			AS "views"
							FROM notification
                            WHERE 1=1
                            	<choose>
                            		<when test="searchOption == 'all'">
	                               		AND #{searchOption} = 'all' 	AND notice_title 	LIKE '%' || #{searchText} || '%'  OR  notice_content LIKE '%' || #{searchText} || '%' 
	                               	</when>
	                               	<when test="searchOption == 'title'">
					            		AND #{searchOption} = 'title' 	AND notice_title 	LIKE '%' || #{searchText} || '%'
					            	</when>
					            	<when test="searchOption == 'content'">
					            		AND #{searchOption} = 'content' AND notice_content 	LIKE '%' || #{searchText} || '%'
					            	</when>
					            </choose>
							ORDER BY notice_seq DESC
							) A
					)
	</select>
	
	<!-- 페이징 처리 후 공지사항 조회, 검색 조건을 설정했을 경우 -->
	<select id="selectNoticeWithCon" parameterType="hashmap" resultType="kr.co.kccbrew.notice.model.NoticeVo">
		SELECT * 
			FROM (
				SELECT ROWNUM RN, A.* 
					FROM (
							SELECT
								notice_seq		AS "noticeSeq"
								,writer_name	AS "writerName"
								,write_dttm		AS "writeDate"
								,notice_title	AS "noticeTitle"
								,views			AS "views"
							FROM notification
                            WHERE 1=1
                            	<choose>
                            		<when test="searchOption == 'all'">
	                               		AND #{searchOption} = 'all' 	AND notice_title 	LIKE '%' || #{searchText} || '%'  OR  notice_content LIKE '%' || #{searchText} || '%' 
	                               	</when>
	                               	<when test="searchOption == 'title'">
					            		AND #{searchOption} = 'title' 	AND notice_title 	LIKE '%' || #{searchText} || '%'
					            	</when>
					            	<when test="searchOption == 'content'">
					            		AND #{searchOption} = 'content' AND notice_content 	LIKE '%' || #{searchText} || '%'
					            	</when>
					            </choose>
							ORDER BY notice_seq DESC
							) A
					)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 이미지 포함 공지사항 상세 조회 -->
	<select id="readNotice" parameterType="kr.co.kccbrew.notice.model.NoticeVo" resultType="kr.co.kccbrew.notice.model.NoticeVo">
		<![CDATA[
			SELECT
				n.notice_seq			AS "noticeSeq"
				,n.writer_id			AS "writerId"
				,n.writer_name			AS "writerName"
				,n.write_dttm			AS "writeDate"
				,n.mod_dttm				AS "modDate"
				,n.mod_user				AS "modUser"
				,n.notice_title			AS "noticeTitle"
				,n.notice_content		AS "noticeContent"
				,n.views				AS "views"
				,n.file_seq				AS "fileSeq"
			FROM notification n
			WHERE n.notice_seq = #{noticeSeq}
		]]>
	</select>
	
	<!-- 공지 사진 기본 정보 등록 -->
	<insert id="insertFileInfo" parameterType="kr.co.kccbrew.notice.model.NoticeVo">
		INSERT INTO file_info
		VALUES(file_seq.NEXTVAL,'04',SYSDATE,#{writerId},SYSDATE,#{writerId})
		<selectKey resultType="int" keyProperty="fileId" order="AFTER">
			SELECT NVL(MAX(file_seq), 0) AS "fileId" FROM file_info
		</selectKey> 
	</insert>
	
	<!-- 공지 사진 상세 정보 등록 -->
	<insert id="insertFileDtlInfo" parameterType="kr.co.kccbrew.notice.model.NoticeVo">
		<![CDATA[
			INSERT INTO file_detail_info VALUES(
					file_dtl_seq.NEXTVAL,
					#{fileId},
					#{fileOriginalName},
					#{fileDetailLocation},
					SYSDATE,
					#{writerId},
					SYSDATE,
					#{fileDetailServerName},
					#{fileFmt},
					#{writerId})
		]]>
	</insert>
	
	<!-- 공지사항 등록하기 -->
	<insert id="insertNotice" parameterType="kr.co.kccbrew.notice.model.NoticeVo">		
		<![CDATA[
			INSERT INTO notification VALUES (
	            notice_seq.NEXTVAL
	            ,#{writerId}
	            ,(
	                SELECT user_nm
	                FROM users
	                WHERE user_id = #{writerId}
	             )
	            ,SYSDATE
	            ,SYSDATE
	            ,#{writerId}
	            ,#{noticeTitle}
	            ,#{noticeContent}
	            ,#{fileId}
	            ,0)
		]]>
	</insert>
	
	<!-- 공지사항 수정하기 -->
	<update id="updateNotice"
		parameterType="kr.co.kccbrew.notice.model.NoticeVo">
		<![CDATA[
			UPDATE notification
			SET mod_user		= #{modUser}
				,mod_dttm		= SYSDATE
				,notice_title	= #{noticeTitle}
				,notice_content = #{noticeContent}
				,file_seq 		= #{fileId}
			WHERE notice_seq = #{noticeSeq}
		]]>
	</update>
	
	<!-- 조회수 증가 -->
	<update id="updateReadCount" parameterType="int">
		<![CDATA[
			UPDATE notification
			SET views = views + 1
			WHERE notice_seq = #{noticeSeq}
		]]>
	</update>
	
	<!-- 공지 삭제 -->
	<delete id="deleteNotice" parameterType="int">
		<![CDATA[
			DELETE notification 
			WHERE notice_seq = #{noticeSeq}
		]]>
	</delete>
	
	<!-- 공지 이미지 목록 -->
	<select id="noticeImageList" parameterType="string" resultType="kr.co.kccbrew.notice.model.NoticeVo">
	<![CDATA[
		SELECT file_server_nm 		AS fileDetailServerName
			   ,storage_location 	AS localSavePath
			   ,file_original_nm	AS fileOriginalName
		FROM file_detail_info
		WHERE file_seq=#{fileSeq}
	]]>
	</select>
	
	<!-- 메인 화면에 띄울 공지 목록 -->
	<select id="selectMainNotice" resultType="kr.co.kccbrew.notice.model.NoticeVo">
	<![CDATA[
		SELECT notice_seq AS noticeId
			   ,notice_title AS noticeTitle
		FROM notification
		WHERE ROWNUM BETWEEN 1 AND 5 
		ORDER BY notice_seq DESC
	]]>
	</select>
	
	<delete id="deleteImgFIle" parameterType="string">
		DELETE FROM file_detail_info WHERE file_seq=#{fileSeq}
	</delete>
	
</mapper>