<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.co.kccbrew.schdlMng.dao.ISchdlMngRepository">

	<resultMap id="holidayResult"
		type="kr.co.kccbrew.schdlMng.model.HolidayVo">
		<result property="holidaySeq" column="HOLIDAY_SEQ" />
		<result property="groupCodeDetailId" column="GRP_CD_DTL_ID" />
		<result property="userId" column="USER_ID" />
		<result property="appDate" column="HLDY_APP" />
		<result property="startDate" column="HLDY_STAR" />
		<result property="endDate" column="HLDY_END" />
		<result property="actualUse" column="ACTL_USE" />
	</resultMap>

	<resultMap id="asAssignResult"
		type="kr.co.kccbrew.schdlMng.model.AsAssignVo">
		<result property="AsAssignSeq" column="AS_ASSIGN_SEQ" />
		<result property="AsInfoSeq" column="AS_INFO_SEQ" />
		<result property="visitDate" column="VISIT_DTTM" />
		<result property="confirmDate" column="CONFIRM_DTTM" />
		<result property="userId" column="MECHANIC_ID" />
		<result property="modDate" column="MOD_DTTM" />
		<result property="modUser" column="MOD_USER" />
		<result property="regDate" column="REG_DTTM" />
		<result property="regUser" column="REG_USER" />
		<result property="reAssign" column="REASSIGN" />
		<result property="rejectContentMecha"
			column="REJECT_CONTENT_MCHA" />
	</resultMap>

	<resultMap id="asResultResult"
		type="kr.co.kccbrew.schdlMng.model.AsResultVo">
		<result property="asResultSeq" column="AS_RESULT_SEQ" />
		<result property="asAssignSeq" column="AS_ASSIGN_SEQ" />
		<result property="resultDetail" column="RESULT_DTL"
			jdbcType="CLOB" javaType="java.lang.String" />
		<result property="storeManagerFeedBack" column="STORE_MNG_FB" />
		<result property="resultDate" column="RESULT_DTTM" />
		<result property="fileSeq" column="FILE_SEQ" />
		<result property="asPrice" column="AS_PRICE" />
		<result property="modUser" column="MOD_USER" />
		<result property="modDate" column="MOD_DTTM" />
		<result property="reApply" column="REAPPLY" />
	</resultMap>

	<resultMap id="scheduleResult"
		type="kr.co.kccbrew.schdlMng.model.SchdlMngVo">
		<result property="rowNumber" column="ROW_NUMBER" />
		<result property="userType" column="USER_TYPE" />
		<result property="userId" column="USER_ID" />
		<result property="userName" column="USER_NM" />
		<result property="userPhoneNumber" column="USER_TELNO" />
		<result property="equipmentCd" column="EQPMN_CD" />
		<result property="storeId" column="STORE_SEQ" />
		<result property="storeName" column="STORE_NM" />
		<result property="storePhoneNumber" column="STORE_TELNO" />
		<result property="locationCd" column="LOCATION_CD" />
		<result property="scheduleId" column="SCHEDULE_ID" />
		<result property="scheduleType" column="SCHE DULE_TYPE" />
		<result property="appDate" column="HLDY_APP" />
		<result property="startDate" column="START_DATE" />
		<result property="endDate" column="END_DATE" />
		<result property="actualUse" column="ACTL_USE" />
		<result property="visitDate" column="VISIT_DTTM" />
		<result property="resultDate" column="result_dttm" />
	</resultMap>

	<resultMap id="userResult"
		type="kr.co.kccbrew.comm.security.model.UserVo">
		<result property="superGrpCdDtlId" column="SUPER_GRP_CD_DTL_ID" />
		<result property="grpCdDtlId" column="GRP_CD_DTL_ID" />
		<result property="grpCdId" column="GRP_CD_ID" />
		<result property="grpCdDtlNm" column="GRP_CD_DTL_NM" />
	</resultMap>


	<!-- 휴가사용현황 조회 -->
	<select id="selectHolidays" parameterType="map"
		resultMap="scheduleResult">
		SELECT *
		FROM (SELECT ROWNUM AS ROW_NUMBER, subquery.*
		FROM ( SELECT
		gc.GRP_CD_DTL_NM AS USER_TYPE
		, users.USER_ID
		, users.USER_NM
		,
		users.user_type_cd
		, users.USER_TELNO
		, store.STORE_SEQ
		, STORE.STORE_NM
		, STORE.STORE_TELNO
		, CASE WHEN gc.GRP_CD_DTL_NM = '기사' THEN
		users.LOCATION_CD
		WHEN gc.GRP_CD_DTL_NM = '점주' THEN STORE.LOCATION_CD
		ELSE NULL
		END AS LOCATION_CD
		, holiday.HOLIDAY_SEQ AS SCHEDULE_ID
		,
		holiday.HLDY_APP
		, holiday.HLDY_STAR AS START_DATE
		, holiday.HLDY_END AS
		END_DATE
		, holiday.ACTL_USE
		FROM holiday
		LEFT OUTER JOIN users ON
		holiday.USER_ID = users.USER_ID
		LEFT OUTER JOIN (SELECT
		grp_cd_dtl_id,grp_cd_dtl_nm FROM GROUP_CODE_DETAIL
		WHERE grp_cd_id='U')
		gc ON users.USER_TYPE_CD = gc.GRP_CD_DTL_ID
		LEFT OUTER JOIN STORE ON
		holiday.STORE_SEQ = STORE.STORE_SEQ
		ORDER BY HOLIDAY_SEQ DESC )
		subquery
		WHERE 1=1
		<!-- 날짜검색 -->
    <![CDATA[AND (TRUNC(START_DATE) <= #{endDate} AND TRUNC(END_DATE) >= #{startDate})]]>

		<!-- 사용자 검색 -->
		<if test="userVo.userId != null and userVo.userId != ''">
			AND USER_ID = #{userVo.userId}
		</if>
		<if test="userVo.userTypeCd != null and userVo.userTypeCd != ''">
			AND user_type_cd = #{userVo.userTypeCd}
		</if>
		<if test="userVo.userNm != null and userVo.userNm != ''">
			AND USER_NM = #{userVo.userNm}
		</if>
		<if
			test="userVo.userTypeCd != '02' and userVo.locationCd != null and userVo.locationCd != ''">
			AND LOCATION_CD LIKE '%' || #{userVo.locationCd,
			jdbcType=VARCHAR}|| '%'
		</if>

		<!-- 지점 검색 -->
		<if test="userVo.storeSeq != null and userVo.storeSeq != ''">
			AND STORE_SEQ = #{userVo.storeSeq}
		</if>
		<if test="userVo.storeNm != null and userVo.storeNm != ''">
			AND STORE_NM = #{userVo.storeNm}
		</if>

		<!-- 실제 사용 여부 -->
		<if test="actualUse != null and actualUse != ''">
			AND ACTL_USE = #{actualUse}
		</if>
		)
		<if
			test="firstRowNum != null and firstRowNum != '' and lastRowNum != null and lastRowNum != ''">
    <![CDATA[ WHERE ROW_NUMBER BETWEEN #{firstRowNum} AND #{lastRowNum} ]]>
		</if>
	</select>

	<!-- 휴가사용전체현황 조회 -->
	<select id="selectAllHolidays" parameterType="map"
		resultMap="scheduleResult">
		SELECT *
		FROM (SELECT ROWNUM AS ROW_NUMBER, subquery.*
		FROM ( SELECT
		gc.GRP_CD_DTL_NM AS USER_TYPE
		, users.USER_ID
		, users.USER_NM
		,
		users.user_type_cd
		, users.USER_TELNO
		, store.STORE_SEQ
		, STORE.STORE_NM
		, STORE.STORE_TELNO
		, CASE WHEN gc.GRP_CD_DTL_NM = '기사' THEN
		users.LOCATION_CD
		WHEN gc.GRP_CD_DTL_NM = '점주' THEN STORE.LOCATION_CD
		ELSE NULL
		END AS LOCATION_CD
		, holiday.HOLIDAY_SEQ AS SCHEDULE_ID
		,
		holiday.HLDY_APP
		, holiday.HLDY_STAR AS START_DATE
		, holiday.HLDY_END AS
		END_DATE
		, holiday.ACTL_USE
		FROM holiday
		LEFT OUTER JOIN users ON
		holiday.USER_ID = users.USER_ID
		LEFT OUTER JOIN (SELECT
		grp_cd_dtl_id,grp_cd_dtl_nm FROM GROUP_CODE_DETAIL
		WHERE grp_cd_id='U')
		gc ON users.USER_TYPE_CD = gc.GRP_CD_DTL_ID
		LEFT OUTER JOIN STORE ON
		holiday.STORE_SEQ = STORE.STORE_SEQ
		ORDER BY HOLIDAY_SEQ DESC )
		subquery
		WHERE 1=1
		<!-- 날짜검색 -->
    <![CDATA[AND (TRUNC(START_DATE) <= #{endDate} AND TRUNC(END_DATE) >= #{startDate})]]>

		<!-- 사용자 검색 -->
		<if test="userVo.userId != null and userVo.userId != ''">
			AND USER_ID = #{userVo.userId}
		</if>
		<if test="userVo.userTypeCd != null and userVo.userTypeCd != ''">
			AND user_type_cd = #{userVo.userTypeCd}
		</if>
		<if test="userVo.userNm != null and userVo.userNm != ''">
			AND USER_NM = #{userVo.userNm}
		</if>
		<if
			test="userVo.userTypeCd != '02' and userVo.locationCd != null and userVo.locationCd != ''">
			AND LOCATION_CD LIKE '%' || #{userVo.locationCd,
			jdbcType=VARCHAR}|| '%'
		</if>

		<!-- 지점 검색 -->
		<if test="userVo.storeSeq != null and userVo.storeSeq != ''">
			AND STORE_SEQ = #{userVo.storeSeq}
		</if>
		<if test="userVo.storeNm != null and userVo.storeNm != ''">
			AND STORE_NM = #{userVo.storeNm}
		</if>

		<!-- 실제 사용 여부 -->
		<if test="actualUse != null and actualUse != ''">
			AND ACTL_USE = #{actualUse}
		</if>
		)
	</select>




	<!-- 휴가사용현황 개수 조회 -->
	<select id="selectHolidayCount" resultType="Integer"
		parameterType="java.util.Map">

		SELECT COUNT(*)
		FROM (
		SELECT *
		FROM (SELECT ROWNUM AS ROW_NUMBER, subquery.*
		FROM ( SELECT
		gc.GRP_CD_DTL_NM AS USER_TYPE
		, users.USER_ID
		, users.USER_NM
		,
		users.user_type_cd
		, users.USER_TELNO
		, store.STORE_SEQ
		, STORE.STORE_NM
		, STORE.STORE_TELNO
		, CASE WHEN gc.GRP_CD_DTL_NM = '기사' THEN
		users.LOCATION_CD
		WHEN gc.GRP_CD_DTL_NM = '점주' THEN STORE.LOCATION_CD
		ELSE NULL
		END AS LOCATION_CD
		, holiday.HOLIDAY_SEQ AS SCHEDULE_ID
		,
		holiday.HLDY_APP
		, holiday.HLDY_STAR AS START_DATE
		, holiday.HLDY_END AS
		END_DATE
		, holiday.ACTL_USE
		FROM holiday
		LEFT OUTER JOIN users ON
		holiday.USER_ID = users.USER_ID
		LEFT OUTER JOIN (SELECT
		grp_cd_dtl_id,grp_cd_dtl_nm FROM GROUP_CODE_DETAIL
		WHERE grp_cd_id='U')
		gc ON users.USER_TYPE_CD = gc.GRP_CD_DTL_ID
		LEFT OUTER JOIN STORE ON
		holiday.STORE_SEQ = STORE.STORE_SEQ
		ORDER BY HOLIDAY_SEQ DESC )
		subquery
		WHERE 1=1
		<!-- 날짜검색 -->
    <![CDATA[AND (TRUNC(START_DATE) <= #{endDate} AND TRUNC(END_DATE) >= #{startDate})]]>

		<!-- 사용자 검색 -->
		<if test="userVo.userId != null and userVo.userId != ''">
			AND USER_ID = #{userVo.userId}
		</if>
		<if test="userVo.userTypeCd != null and userVo.userTypeCd != ''">
			AND user_type_cd = #{userVo.userTypeCd}
		</if>
		<if test="userVo.userNm != null and userVo.userNm != ''">
			AND USER_NM = #{userVo.userNm}
		</if>
		<if
			test="userVo.userTypeCd != '02' and userVo.locationCd != null and userVo.locationCd != ''">
			AND LOCATION_CD LIKE '%' || #{userVo.locationCd,
			jdbcType=VARCHAR}|| '%'
		</if>

		<!-- 지점 검색 -->
		<if test="userVo.storeSeq != null and userVo.storeSeq != ''">
			AND STORE_SEQ = #{userVo.storeSeq}
		</if>
		<if test="userVo.storeNm != null and userVo.storeNm != ''">
			AND STORE_NM = #{userVo.storeNm}
		</if>

		<!-- 실제 사용 여부 -->
		<if test="actualUse != null and actualUse != ''">
			AND ACTL_USE = #{actualUse}
		</if>
		)
		)

	</select>




	<!-- 회원 캘린더에 표시할 스케줄 리스트 반환 -->
	<select id="selectCalendarSchedule"
		resultType="kr.co.kccbrew.schdlMng.model.SchdlMngVo"
		parameterType="kr.co.kccbrew.schdlMng.model.SchdlMngVo">

		SELECT
		USER_TYPE AS "userType",
		USER_ID AS "userId",
		USER_NM AS
		"userName",
		USER_TELNO AS "userPhoneNumber",
		STORE_SEQ AS "storeId",
		STORE_NM AS "storeName",
		STORE_TELNO AS "storePhoneNumber",
		LOCATION_CD
		AS "storeLocation",
		SCHEDULE_DATE AS "scheduleDate",
		SCHEDULE_TYPE AS
		"scheduleType",
		SCHEDULE_ID AS "scheduleId"
		FROM
		(SELECT '기사' AS
		"USER_TYPE",
		u."USER_ID", u."USER_NM", u."USER_TELNO",
		su."STORE_SEQ",
		s."STORE_NM",
		s."STORE_TELNO", s."LOCATION_CD",
		aa."VISIT_DTTM" AS
		SCHEDULE_DATE,
		'배정' AS "SCHEDULE_TYPE",
		aa."AS_ASSIGN_SEQ" AS
		SCHEDULE_ID
		FROM
		AS_ASSIGN aa
		LEFT OUTER JOIN USERS u ON aa.mechanic_id =
		u.user_id
		LEFT
		OUTER JOIN AS_INFORMATION ai ON aa."AS_INFO_SEQ" =
		ai."AS_INFO_SEQ"
		LEFT OUTER JOIN STORE_USER_MAP su ON ai."STORE_MNG_ID"
		= su."USER_ID"
		LEFT OUTER JOIN STORE s ON su."STORE_SEQ" =
		s."STORE_SEQ"

		UNION ALL

		SELECT

		CASE
		WHEN h."GRP_CD_DTL_ID" = '02' THEN
		'점주'
		WHEN
		h."GRP_CD_DTL_ID" = '03' THEN '기사'
		ELSE NULL
		END AS "USER_TYPE",
		h."USER_ID",
		u."USER_NM",
		u."USER_TELNO",
		s."STORE_SEQ",
		st."STORE_NM",
		st."STORE_TELNO",
		st."LOCATION_CD",

		'휴무' AS
		"SCHEDULE_TYPE",
		h."HOLIDAY_SEQ" AS SCHEDULE_ID
		FROM "HR"."HOLIDAY" h
		LEFT JOIN
		"HR"."STORE_USER_MAP" s ON h."USER_ID" = s."USER_ID"
		LEFT
		JOIN
		"HR"."USERS" u ON h."USER_ID" = u."USER_ID"
		LEFT JOIN "HR"."STORE"
		st ON
		s."STORE_SEQ" = st."STORE_SEQ"

		UNION ALL

		SELECT '기사' AS
		"USER_TYPE",
		u."USER_ID", u."USER_NM", u."USER_TELNO",
		su."STORE_SEQ",
		s."STORE_NM",
		s."STORE_TELNO", s."LOCATION_CD",
		aa."VISIT_DTTM" AS
		SCHEDULE_DATE, '근무'
		AS "SCHEDULE_TYPE",
		ar."AS_RESULT_SEQ" AS
		SCHEDULE_ID
		FROM AS_RESULT ar
		LEFT OUTER JOIN AS_ASSIGN aa ON
		ar."AS_ASSIGN_SEQ" = aa."AS_ASSIGN_SEQ"
		LEFT OUTER JOIN USERS u ON
		aa.mechanic_id = u.user_id
		LEFT OUTER JOIN
		AS_INFORMATION ai ON
		aa."AS_INFO_SEQ" = ai."AS_INFO_SEQ"
		LEFT OUTER JOIN
		STORE_USER_MAP su
		ON ai."STORE_MNG_ID" = su."USER_ID"
		LEFT OUTER JOIN
		STORE s ON
		su."STORE_SEQ" = s."STORE_SEQ" )

		<!-- 검색조건 -->
		WHERE 1=1

		<!-- 사용자 검색 -->
		<if test="userId != null and userId != ''">
			AND USER_ID = #{userId}
		</if>

		<!-- 날짜 검색 -->
		<if test="scheduleDate != null and scheduleDate != '' ">
        <![CDATA[
        AND 
EXTRACT(YEAR FROM SCHEDULE_DATE) = 2023 AND EXTRACT(MONTH FROM SCHEDULE_DATE) = 9

        ]]>
		</if>
	</select>



	<!-- 사용자ID로 휴가조회 -->
	<select id="selectHoliday" resultMap="holidayResult"
		parameterType="map">
	<![CDATA[
		select * from holiday	
		where USER_ID=#{userId}
	]]>
	</select>


	<!-- 휴가ID로 휴가취소 -->
	<update id="cancelHoliday" parameterType="java.lang.Integer">
		UPDATE holiday
		SET
		ACTL_USE = 'N'
		WHERE HOLIDAY_SEQ = #{holidaySeq}
	</update>


	<!-- 사용한 휴가일수 -->
	<select id="selectUsedHoliday" resultType="int"
		parameterType="String">
    <![CDATA[
    SELECT COUNT(*) FROM holiday
    WHERE USER_ID=#{userId} AND ACTL_USE='Y'
    ]]>
	</select>


	<!-- 휴가등록 -->
	<insert id="insertHoliday"
		parameterType="kr.co.kccbrew.schdlMng.model.HolidayVo">
		<selectKey keyProperty="holidaySeq" resultType="int"
			order="BEFORE">
			SELECT HOLIDAY_SEQ.nextval FROM DUAL
		</selectKey>
		INSERT INTO holiday (HOLIDAY_SEQ, GRP_CD_DTL_ID, USER_ID, HLDY_APP,
		HLDY_STAR, HLDY_END,STORE_SEQ)
		VALUES (#{holidaySeq},
		#{groupCodeDetailId}, #{userId}, #{appDate},
		#{startDate}, #{endDate}
		<choose>
			<when test="groupCodeDetailId eq '02'">,#{storeSeq}</when>
			<otherwise>,null</otherwise>
		</choose>
		)
	</insert>





	<!-- 지역코드 조회 -->
	<select id="selectLocations" resultMap="userResult">
		SELECT
		CASE
		WHEN
		INSTR(GRP_CD_DTL_ID, '-') > 0 THEN SUBSTR(GRP_CD_DTL_ID, 1,
		INSTR(GRP_CD_DTL_ID, '-') - 1)
		ELSE NULL
		END AS SUPER_GRP_CD_DTL_ID,
		GRP_CD_DTL_ID,
		GRP_CD_ID,
		GRP_CD_DTL_NM
		FROM
		GROUP_CODE_DETAIL
		WHERE
		(GRP_CD_ID = 'LL' OR GRP_CD_ID = 'L')
	</select>

	<select id="selectMechaSchedules" resultMap="scheduleResult"
		parameterType="kr.co.kccbrew.schdlMng.model.SchdlMngVo">
		SELECT *
		FROM
		(SELECT
		u.USER_ID,
		u.USER_NM,
		u.USER_TELNO,
		u.LOCATION_CD,
		u.EQPMN_CD,
		g.GRP_CD_DTL_NM AS USER_TYPE,
		h.HLDY_STAR AS
		START_DATE,
		h.HLDY_END AS END_DATE,
		NULL AS VISIT_DTTM,
		NULL AS
		result_dttm,
		'휴무' AS SCHEDULE_TYPE
		FROM
		USERS u
		JOIN
		GROUP_CODE_DETAIL g ON
		u.USER_TYPE_CD = g.GRP_CD_DTL_ID
		LEFT JOIN
		HOLIDAY h ON u.USER_ID =
		h.USER_ID
		WHERE
		g.GRP_CD_ID = 'U'
		AND g.GRP_CD_DTL_ID IN ('03')
		AND
		h.actl_use = 'Y'

		UNION

		SELECT
		u.USER_ID,
		u.USER_NM,
		u.USER_TELNO,
		u.LOCATION_CD,
		u.EQPMN_CD,
		g.GRP_CD_DTL_NM AS USER_TYPE,
		NULL AS
		START_DATE,
		NULL AS END_DATE,
		a.VISIT_DTTM,
		NULL AS result_dttm,
		'배정' AS
		SCHEDULE_TYPE
		FROM
		USERS u
		JOIN
		GROUP_CODE_DETAIL g ON u.USER_TYPE_CD =
		g.GRP_CD_DTL_ID
		JOIN
		AS_ASSIGN a ON u.USER_ID = a.MECHANIC_ID
		WHERE
		g.GRP_CD_ID = 'U'
		AND g.GRP_CD_DTL_ID IN ('03')

		UNION

		SELECT
		u.USER_ID,
		u.USER_NM,
		u.USER_TELNO,
		u.LOCATION_CD,
		u.EQPMN_CD,
		g.GRP_CD_DTL_NM AS
		USER_TYPE,
		NULL AS START_DATE,
		NULL AS END_DATE,
		NULL AS VISIT_DTTM,
		r.result_dttm,
		'근무' AS SCHEDULE_TYPE
		FROM
		USERS u
		JOIN
		GROUP_CODE_DETAIL g
		ON u.USER_TYPE_CD = g.GRP_CD_DTL_ID
		JOIN
		AS_ASSIGN a ON u.USER_ID =
		a.MECHANIC_ID
		JOIN
		AS_RESULT r ON a.AS_ASSIGN_SEQ = r.AS_ASSIGN_SEQ
		WHERE
		g.GRP_CD_ID = 'U'
		AND g.GRP_CD_DTL_ID IN ('03'))
		WHERE 1=1

	</select>

	<!-- 검색조건에 따른 아이디리스트 조회 -->
	<select id="selectIdList" resultType="string"
		parameterType="kr.co.kccbrew.comm.security.model.UserVo">
		select USER_ID from users
		where 1=1
		<if test="locationCd != null and locationCd != ''">
			AND LOCATION_CD LIKE '%' || #{locationCd} || '%'
		</if>
		<if test="userId != null and userId != ''">
			AND USER_ID = #{userId}
		</if>
		<if test="userNm != null and userNm != ''">
			AND USER_NM = #{userNm}
		</if>
		<if test="eqpmnCd != null and eqpmnCd != ''">
			AND EQPMN_CD = #{eqpmnCd}
		</if>
		<if test="userTypeCd != null and userTypeCd != ''">
			AND USER_TYPE_CD = #{userTypeCd}
		</if>
	</select>


	<!-- 아이디에 따른 실제사용이 Y인 휴무일 조회 -->
	<select id="selectHolidayDates" resultType="java.util.Map"
		parameterType="string">
		<choose>
			<when test="userTypeCd eq '02'">
				select holiday.HLDY_STAR as "HLDY_STAR"
				, holiday.HLDY_END as
				"HLDY_END"
				, s.store_nm as "STORE_NM"
				from holiday
				inner join store s
				on s.store_seq = holiday.store_seq
				where ACTL_USE='Y'
				<if test="id != null and id != ''">
					AND user_id = #{id}
				</if>
				<if test="yr != null and yr != '' and mn != null and mn != ''">
					and (
					(EXTRACT(YEAR FROM HLDY_STAR) = #{yr} and
					EXTRACT(MONTH FROM HLDY_STAR) = #{mn})
					OR
					(EXTRACT(YEAR FROM
					HLDY_END)
					= #{yr} and EXTRACT(MONTH FROM HLDY_END) = #{mn})
					)
				</if>
			</when>
			<otherwise>
				select HLDY_STAR, HLDY_END from holiday where
				ACTL_USE='Y'
				<if test="id != null and id != ''">
					AND user_id = #{id}
				</if>
				<if test="yr != null and yr != '' and mn != null and mn != ''">
					and (
					(EXTRACT(YEAR FROM HLDY_STAR) = #{yr} and
					EXTRACT(MONTH FROM HLDY_STAR) = #{mn})
					OR
					(EXTRACT(YEAR FROM
					HLDY_END)
					= #{yr} and EXTRACT(MONTH FROM HLDY_END) = #{mn})
					)
				</if>
			</otherwise>
		</choose>
	</select>

	<!-- 아이디에 따른 배정일 조회(배정일이 정해졌으며 수리기사가 반려하지 않은 건) -->
	<select id="selectAssignDates" parameterType="string"
		resultType="kr.co.kccbrew.schdlMng.model.SchdlMngVo">
		SELECT as_assign.visit_dttm AS visitDate, s.store_nm AS storeName
		FROM as_information
		LEFT OUTER JOIN
		as_assign
		ON as_information.AS_INFO_SEQ = as_assign.AS_INFO_SEQ
		INNER JOIN store s ON s.store_seq=as_information.store_seq
		WHERE
		1=1
		<if test="id != null and id != ''">
			AND (as_information.STORE_MNG_ID = #{id} OR
			as_assign.mechanic_id =
			#{id})
		</if>
		AND as_assign.visit_dttm IS NOT NULL
		<!-- AND as_assign.reject_content_mcha
		IS NULL -->
		<if test="yr != null and yr != '' and mn != null and mn != ''">
			AND
			(EXTRACT(YEAR FROM as_assign.VISIT_DTTM) = #{yr} AND
			EXTRACT(MONTH FROM as_assign.VISIT_DTTM) = #{mn})
		</if>

	</select>

	<!-- 아이디에 따른 결과일 조회 -->
	<select id="selectResultDates" parameterType="string"
		resultType="java.sql.Date">
		SELECT as_result.result_dttm
		FROM as_information
		LEFT OUTER JOIN
		as_assign
		ON as_information.AS_INFO_SEQ = as_assign.AS_ASSIGN_SEQ
		LEFT
		OUTER JOIN as_result
		ON as_assign.AS_ASSIGN_SEQ =
		as_result.AS_ASSIGN_SEQ
		WHERE 1=1
		<if test="id != null and id != ''">
			AND (as_information.STORE_MNG_ID = #{id} OR
			as_assign.mechanic_id =
			#{id})
		</if>
		and as_result.result_dttm is not null
		<if test="yr != null and yr != '' and mn != null and mn != ''">
			and
			(EXTRACT(YEAR FROM RESULT_DTTM) = #{yr} and
			EXTRACT(MONTH FROM RESULT_DTTM) =#{mn})
		</if>
	</select>

	<!-- AS신청건 조회 -->
	<select id="selectAsRegDates" parameterType="string"
		resultType="java.sql.Date">
		SELECT as_information.reg_dttm
		FROM as_information
		LEFT OUTER JOIN
		as_assign
		ON as_information.AS_INFO_SEQ = as_assign.AS_INFO_SEQ
		where
		1=1
		<!-- as_assign.visit_dttm is null AND as_information.reject_content_str 
			IS NULL -->
		<if test="yr != null and yr != '' and mn != null and mn != ''">
			AND
			(EXTRACT(YEAR FROM as_information.reg_dttm ) = #{yr}
			and
			EXTRACT(MONTH FROM as_information.reg_dttm ) =#{mn})
		</if>
	</select>


	<!-- 휴가 조회 -->
	<select id="selectHoliday2" parameterType="map"
		resultMap="holidayResult">
		SELECT *
		FROM holiday
		WHERE user_id = #{userId}
		AND
    <![CDATA[TRUNC(#{date}) >= TRUNC(HLDY_STAR) AND TRUNC(#{date}) <= TRUNC(HLDY_END)]]>
		<if test="actualUse != null and actualUse != ''">
			AND ACTL_USE = #{actualUse}
		</if>
	</select>

	<!-- 배정 조회 -->
	<select id="selectAssign" parameterType="map"
		resultMap="asAssignResult">
		SELECT *
		FROM AS_ASSIGN
		WHERE MECHANIC_ID = #{userId}
		AND
		TRUNC(VISIT_DTTM) = TRUNC(#{date})
	</select>

	<!-- 결과 조회 -->
	<select id="selectResult" parameterType="map"
		resultMap="asResultResult">
		SELECT ar.*
		FROM AS_ASSIGN aa
		INNER JOIN AS_RESULT ar ON
		aa.AS_ASSIGN_SEQ = ar.AS_ASSIGN_SEQ
		WHERE MECHANIC_ID = #{userId} AND
		TRUNC(RESULT_DTTM) = TRUNC(#{date})
	</select>
</mapper>